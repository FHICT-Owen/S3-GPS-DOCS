@startuml C4_Elements
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

Person(brand, "Brand manager")
Person(customer, "Customer")
Person(staff, "Kitchen staff")
Person(manager, "Restaurant manager")

System_Ext(identity, "Identity service", "Provides authtentication with auth0.")

System_Boundary(boundry, "Restaurant-manager"){
	Container(spa, "Single-Page Application", "Vue + TypeScript", "Provides the menu and editing the menu + order-, inventory-, session- and table management.")

	Container(api, "API Gateway Application", "Spring MVC + Java + Redis", "Provides data to the front-end and controls authorization.")

	Container(menu_service, "Menu service", "Spring MVC + Java", "Retrieves the menu.")
	Container(inventory_service, "Inventory service", "Spring MVC + Java", "Retrieves the inventory data.")

	ContainerDb(menu_db, "Database", "PostgreSQL", "Stores the menu data.")
	ContainerDb(inventory_db, "Database", "PostgreSQL", "Stores the inventory data.")
}

Rel(customer, spa, "The customer uses the digital menu to order food.")
Rel(staff, spa, "label")
Rel(manager, spa, "Manages the menu and can add permissons to kitchen staff.")
Rel(manager, spa, "Manages the menu and can add permissons to kitchen staff.")
Rel(brand, spa, "Controls the white label of their restaurant cain.")

Rel(spa, api, "Uses websockets", "JSON/HTTPS, JSON/WSS")

Rel(api, identity, "Makes API calls to", "JSON/HTTPS")
Rel(spa, identity, "Makes API calls to", "JSON/HTTPS")

Rel(api, menu_service, "Makes API calls to", "JSON/HTTPS")
Rel(api, inventory_service, "Makes API calls to", "JSON/HTTPS")

Rel(menu_service, menu_db, "Retrieves menu data")
Rel(inventory_service, inventory_db, "Retrieves inventory data")

@enduml
